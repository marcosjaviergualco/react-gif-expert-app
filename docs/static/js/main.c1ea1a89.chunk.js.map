{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","Helpers/GetGifs.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setImputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","id","title","url","src","alt","GetGifs","category","a","fetch","resp","json","data","gifs","map","img","slug","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","className","GifExpertApp","props","categorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAMlB,SAEE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBmB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,QCLlBG,EAAc,SAAC,GAAqB,EAAnBC,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMC,EAAU,EAAVA,IAEnC,OACI,gCACI,qBAAKC,IAAKD,EAAKE,IAAKH,IACpB,4BAAIA,Q,uBCLHI,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbL,EADa,0DAC4CI,EAD5C,sDAECE,MAAMN,GAFP,cAEbO,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHd,GAAIc,EAAId,GACRC,MAAOa,EAAIb,MAAMa,EAAIb,MAAMa,EAAIC,KAC/Bb,IAAG,UAAEY,EAAIE,cAAN,aAAE,EAAYC,iBAAiBf,QATvB,kBAYXU,GAZW,4CAAH,sDCGPM,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACdpB,mBAAS,CAC7ByB,KAAM,GACNQ,SAAS,IAHyB,mBACjCC,EADiC,KAC1BC,EAD0B,KAoBtC,OAdAC,qBAAU,WAERjB,EAAQC,GACHiB,MAAK,SAAAC,GAEEH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAKxB,CAACb,IAEGc,EDhBwBK,CAAanB,GAAjCU,EAFwB,EAE7BL,KAAaQ,EAFgB,EAEhBA,QAErB,OACI,qCACI,6BAAKb,IAEHa,GAAW,mBAAGO,UAAU,oCAAb,wBAEb,qBAAKA,UAAU,6CAAf,SAEQV,EAAOH,KAAK,SAAAC,GAAG,OAAK,cAAC,EAAD,eAESA,GADAA,EAAId,aEKtC2B,EAnBM,SAAAC,GAAU,IAAD,EAES1C,mBAAS,IAFlB,mBAEpB2C,EAFoB,KAER5C,EAFQ,KAI1B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWhB,KAAI,SAAAiB,GAAS,OAAI,cAAC,EAAD,CAA2BxB,SAAWwB,GAAvBA,YCX/DC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c1ea1a89.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setImputValue] = useState('');\r\n     const handleImputChange = (e) =>{\r\n        setImputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategorias(cat => [inputValue,...cat]);\r\n            setImputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          \r\n          <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleImputChange}\r\n          />  \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id,title,url }) => {\r\n\r\n    return (\r\n        <div>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const GetGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${category}&api_key=mSwO3F8oPNamgtF1QtCCvE0vpYJZGRsh`;\r\n    const resp =  await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title?img.title:img.slug,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return (gifs); \r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n    \r\n    return(\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__fadeIn\">Loading...</p> }\r\n\r\n            <div className=\"card-grid animate__animated animate__flash\">\r\n                {\r\n                    images.map( img =>  <GifGridItem \r\n                                            key={img.id}\r\n                                            { ...img } \r\n                                        />)\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n","import { GetGifs } from \"../Helpers/GetGifs\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n          data: [],\r\n          loading: true\r\n      });\r\n\r\n      useEffect(() => {\r\n\r\n        GetGifs(category)\r\n            .then(imgs => {\r\n                \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false \r\n                    });\r\n            \r\n            });\r\n\r\n      }, [category])\r\n\r\n      return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n    \r\n    const[categorias, setCategorias] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>  \r\n            <AddCategory setCategorias={setCategorias}/> \r\n            <hr /> \r\n\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => <GifGrid key={ categoria } category={ categoria }/>)\r\n                }\r\n            </ol>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}